<div class="white" id="wrapper" style="margin:0px auto;">
    <div class="title2">
		Scattering Random Items
	</div>

	<br><br><br>
	
	<div class="multi_new">
	    <%= form_tag('/items_admin/multi_create') do %>

				<div class="label">Item Description ID:</div>
	            <div class="input_box"><%= number_field_tag "item_description_id" %><div>
     		
				<div class="label">Latitude: </div>
	          	<div class="input_box"><%= text_field_tag "latitude" %></div>
	
	            <div class="label">Longitude: </div>
	            <div class="input_box"><%= text_field_tag "longitude" %></div>

	          	<div class="label">Number of Items to Make: </div>
	            <div class="input_box"><%= number_field_tag "number", 1 %></div>

	          	<div class="label">Latitude Offset: </div>
	            <div class="input_box"><%= text_field_tag "latitudeoffset", 0 %></div>

	          	<div class="label">Longitude Offset: </div>
	            <div class="input_box"><%= text_field_tag "longitudeoffset", 0 %></div>
	    
	    		<p>
		          <%= submit_tag 'Create Multiple' %>
		        </p>
		
	    <% end %>
	</div>
	
	<div style="width:500px; height:500px;">
	  <div id="map_canvas" style="width:100%; height:100%"></div>
	</div>
	
	<br><br><br>
	
	<div>
		<div class="title2">
			Instructions:
		</div>
		<br><br>
		<div class="white instruction" align="left">
		* Select Create multiple random at the top of the page<br>
	  	* enter in user 0 (working to remove this)<br>
	  	* select the center of the scatter that you want on the map<br>
	  	* It will use the last marker that you select as the center, Working on removing old markers<br>
	  	* enter in the item description id for item, the number of them you want to make<br>
	  	* lat and long offsets are based around the the center point(working on showing a ring in the map)<br>
	  	* hit save and assume they were scattered well<br>
	  	* you're done!<br>
		</div>
	</div>
	<br>
	
    <%= link_to 'Back', items_path %>
  
</div>
<script type="text/javascript">
    var map;
    var marker;
    var circle;
    var arrayPoints = [];
    function initialize() {

        var myOptions = {
            zoom: 8,
            center: new google.maps.LatLng(41.83872375564222, -87.62723207473755),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        }

        map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

        google.maps.event.addListener(map, 'click', function(event) {
            var position = event.latLng;
            arrayPoints.push(position);
            placeMarker(position);
            console.log(position.lat());
            console.log(position.lng());
            $("#latitude").val(position.lat());
            $("#longitude").val(position.lng());


        });

        function placeMarker(location) {
            if (marker != null) {
                marker.setMap(null);
            }
            marker = new google.maps.Marker({
                position: location,
                map: map,
                animation: google.maps.Animation.DROP
            });
            if(($("#latitudeoffset").val() != 0) && ($("#longitudeoffset").val() != 0)) {
                // Add circle overlay and bind to marker
                var rad = haversine(location.lat(), location.lat() + parseFloat($("#latitudeoffset").val()),
                        location.lng(), location.lng() + parseFloat($("#longitudeoffset").val()));
                if(circle != null) {
                    circle.setMap(null);
                }
                circle = new google.maps.Circle({
                    center: location,
                    clickable: false,
                    fillColor: 'blue',
                    fillOpacity: 0.5,
                    map: map,
                    radius: rad
                });
            }
        }
    }

    function toRad(Value) {
        /** Converts numeric degrees to radians */
        return Value * Math.PI / 180;
    }

    function haversine(lat1, lat2, lon1, lon2) {
        var R = 6371 * 1000; // meters
        var dLat = toRad(lat2 - lat1);
        var dLon = toRad(lon2 - lon1);
        lat1 = toRad(lat1);
        lat2 = toRad(lat2);

        var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                Math.sin(dLon / 2) * Math.sin(dLon / 2) * Math.cos(lat1) * Math.cos(lat2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
        return R * c;
    }

    $(document).ready(function () {
        console.log("loaded dom");
        initialize();
    });
</script>
